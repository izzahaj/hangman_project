{"ast":null,"code":"var _jsxFileName = \"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SetWordModal from \"./SetWordModal\";\nimport Modal from \"./Modal\";\nimport Stopwatch from \"./Stopwatch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Multiplayer = () => {\n  _s();\n\n  const [turn, setTurn] = useState(1);\n  const [word, setWord] = useState(\"\");\n  const [wordModal, setWordModal] = useState(true);\n  const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [start, setStart] = useState(false);\n  const [time, setTime] = useState(0);\n  const [correct, setCorrect] = useState([]);\n  const [guessed, setGuessed] = useState([]);\n  const [lives, setLives] = useState(6); // 6 lives\n\n  const [status, setStatus] = useState(\"Ongoing\");\n  const hiddenWord = word.toUpperCase().split(\"\").map(letter => correct.includes(letter) ? letter : \"_\").join(\" \");\n  let guesses = guessed.join(\" \");\n  const MAX_SCORE = 24000;\n  const MAX_BONUS = 60000;\n  const bonus = time > 60000 || status === \"L\" ? 0 : MAX_BONUS - time;\n  const endMessage = status === \"W\" ? \"You won!\" : \"You lost!\";\n\n  const showModal = () => {\n    setIsOpenModal(true);\n  };\n\n  const hideModal = () => {\n    setIsOpenModal(false);\n  };\n\n  const checkWin = () => {\n    if (!hiddenWord.includes(\"_\") && lives > 0) {\n      setStatus(\"W\");\n      endGame();\n    } else if (hiddenWord.includes(\"_\") && lives === 0) {\n      setStatus(\"L\");\n      endGame();\n    }\n  };\n\n  const countPoints = () => {\n    if (status === \"W\" && lives > 0) {\n      return lives / 6 * MAX_SCORE + bonus;\n    } else {\n      return 0;\n    }\n  };\n\n  const endGame = () => {\n    setStart(false);\n    showModal();\n  };\n\n  useEffect(() => {\n    if (lives >= 0 && lives < 6 && status === \"Ongoing\") {\n      checkWin();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-1 center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Multiplayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stopwatch, {\n        start: start,\n        time: time,\n        setTime: setTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: hiddenWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: alphabets.map((a, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"letter-btn\",\n          disabled: guessed.includes(a),\n          onClick: () => {\n            if (!start) {\n              setStart(true);\n            }\n\n            if (word.includes(a) && !guesses.includes(a)) {\n              setCorrect([...correct, a]);\n              setGuessed([...guessed, a]); //checkWin()\n            } else if (!guesses.includes(a)) {\n              setLives(lives - 1);\n              setGuessed([...guessed, a]); //checkWin()\n            }\n\n            checkWin();\n          },\n          children: a\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Letters used:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: guesses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Lives left: \", lives < 0 ? 0 : lives]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-1\",\n      children: [/*#__PURE__*/_jsxDEV(SetWordModal, {\n        show: wordModal,\n        onClose: () => setWordModal(false),\n        title: \"Please enter a word for Player \" + turn,\n        word: word,\n        setWord: setWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: isOpenModal,\n        onClose: hideModal,\n        title: endMessage,\n        score: countPoints(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bonus points: \", bonus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Score: \", countPoints()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The word is: \", word]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Multiplayer, \"orMJ9wbRdVVmy6pAJU7DHnoSiQU=\");\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"names":["React","useState","useEffect","SetWordModal","Modal","Stopwatch","Multiplayer","turn","setTurn","word","setWord","wordModal","setWordModal","alphabets","isOpenModal","setIsOpenModal","start","setStart","time","setTime","correct","setCorrect","guessed","setGuessed","lives","setLives","status","setStatus","hiddenWord","toUpperCase","split","map","letter","includes","join","guesses","MAX_SCORE","MAX_BONUS","bonus","endMessage","showModal","hideModal","checkWin","endGame","countPoints","a","i"],"sources":["/Users/izzah/Documents/Programming/hangman_project/client/src/components/Multiplayer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SetWordModal from \"./SetWordModal\";\nimport Modal from \"./Modal\";\nimport Stopwatch from \"./Stopwatch\";\n\nconst Multiplayer = () => {\n  const [turn, setTurn] = useState(1)\n  const [word, setWord] = useState(\"\")\n  const [wordModal, setWordModal] = useState(true)\n\n\n  const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",\n    \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n    \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [start, setStart] = useState(false)\n  const [time, setTime] = useState(0)\n  const [correct, setCorrect] = useState([])\n  const [guessed, setGuessed] = useState([])\n  const [lives, setLives] = useState(6) // 6 lives\n  const [status, setStatus] = useState(\"Ongoing\")\n  const hiddenWord = word.toUpperCase().split(\"\").map(letter => correct.includes(letter) ? letter : \"_\").join(\" \")\n  let guesses = guessed.join(\" \")\n  const MAX_SCORE = 24000\n  const MAX_BONUS = 60000\n  const bonus = (time > 60000 || status === \"L\") ? 0 : MAX_BONUS - time\n  const endMessage = status === \"W\" ? \"You won!\" : \"You lost!\"\n\n  const showModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const hideModal = () => {\n    setIsOpenModal(false)\n  }\n\n  const checkWin = () => {\n    if (!hiddenWord.includes(\"_\") && lives > 0) {\n      setStatus(\"W\")\n      endGame()\n    } else if (hiddenWord.includes(\"_\") && lives === 0) {\n      setStatus(\"L\")\n      endGame()\n    }\n  }\n\n  const countPoints = () => {\n    if (status === \"W\" && lives > 0) {\n      return (lives / 6) * MAX_SCORE + bonus\n    } else {\n      return 0\n    }\n  }\n\n  const endGame = () => {\n    setStart(false)\n    showModal()\n  }\n\n  useEffect(() => {\n    if ((lives >= 0 && lives < 6) && status === \"Ongoing\") {\n      checkWin()\n    }\n  })\n\n  return (\n    <>\n      <div className=\"container-1 center\">\n        <h1>Multiplayer</h1>\n        <Stopwatch start={start} time={time} setTime={setTime}/>\n        <h2>{hiddenWord}</h2>\n        <div className=\"flex-container\">\n          {alphabets.map((a, i) => <button className=\"letter-btn\" key={i} disabled={guessed.includes(a)} onClick={() => {\n            if (!start) {\n              setStart(true)\n            }\n            if (word.includes(a) && !guesses.includes(a)) {\n              setCorrect([...correct, a])\n              setGuessed([...guessed, a])\n              //checkWin()\n            } else if (!guesses.includes(a)) {\n              setLives(lives - 1)\n              setGuessed([...guessed, a])\n              //checkWin()\n            }\n            checkWin()\n          }}>{a}</button>)}\n        </div>\n        <h3>Letters used:</h3>\n        <h3>{guesses}</h3>\n        <h3>Lives left: {lives < 0 ? 0 : lives}</h3>\n        <h3>{status}</h3>\n      </div>\n      <div className=\"container-1\">\n        <SetWordModal\n          show={wordModal}\n          onClose={() => setWordModal(false)}\n          title={\"Please enter a word for Player \" + turn}\n          word={word}\n          setWord={setWord}\n        />\n        <Modal show={isOpenModal} onClose={hideModal} title={endMessage} score={countPoints()}>\n          <p>Bonus points: {bonus}</p>\n          <p>Total Score: {countPoints()}</p>\n          <p>The word is: {word}</p>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Multiplayer"],"mappings":"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"},"metadata":{},"sourceType":"module"}