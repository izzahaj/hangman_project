{"ast":null,"code":"var _jsxFileName = \"/Users/izzah/Documents/Programming/hangman_project/client/src/components/GameLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Stopwatch from \"./Stopwatch\";\nimport hangman1 from \"./images/hangman1.jpg\";\nimport hangman2 from \"./images/hangman2.jpg\";\nimport hangman3 from \"./images/hangman3.jpg\";\nimport hangman4 from \"./images/hangman4.jpg\";\nimport hangman5 from \"./images/hangman5.jpg\";\nimport hangman6 from \"./images/hangman6.jpg\";\nimport hangman7 from \"./images/hangman7.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameLayout = props => {\n  _s();\n\n  const {\n    word,\n    hiddenWord,\n    start,\n    setStart,\n    time,\n    setTime,\n    lives,\n    setStatus\n  } = props;\n  const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  const [guessed, setGuessed] = useState([]);\n  let guesses = guessed.join(\" \");\n  const imagesHangman = [hangman1, hangman2, hangman3, hangman4, hangman5, hangman6, hangman7];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-1 center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.hiddenWord === \"\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Singleplayer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stopwatch, {\n          start: props.start,\n          time: props.time,\n          setTime: props.setTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagesHangman[6 - props.lives],\n          width: \"325\",\n          height: \"280\",\n          alt: \"hangman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hidden-word\",\n          children: props.hiddenWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container\",\n          children: alphabets.map((a, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"letter-btn\",\n            disabled: guessed.includes(a),\n            onClick: () => {\n              if (!props.start) {\n                props.setStart(true);\n                props.setStatus(\"Ongoing\");\n              }\n\n              if (props.word.includes(a) && !guesses.includes(a)) {\n                setCorrect([...correct, a]);\n                setGuessed([...guessed, a]);\n                checkWin();\n              } else if (!guesses.includes(a)) {\n                setLives(lives - 1);\n                setGuessed([...guessed, a]);\n                checkWin();\n              }\n            },\n            children: a\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 40\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Letters used:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: guesses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Lives left: \", lives < 0 ? 0 : lives]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameLayout, \"gUq/iLvMlSo466KjFFfLBtosQKU=\");\n\n_c = GameLayout;\nexport default GameLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameLayout\");","map":{"version":3,"names":["React","useState","Stopwatch","hangman1","hangman2","hangman3","hangman4","hangman5","hangman6","hangman7","GameLayout","props","word","hiddenWord","start","setStart","time","setTime","lives","setStatus","alphabets","guessed","setGuessed","guesses","join","imagesHangman","map","a","i","includes","setCorrect","correct","checkWin","setLives"],"sources":["/Users/izzah/Documents/Programming/hangman_project/client/src/components/GameLayout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Stopwatch from \"./Stopwatch\";\nimport hangman1 from \"./images/hangman1.jpg\";\nimport hangman2 from \"./images/hangman2.jpg\";\nimport hangman3 from \"./images/hangman3.jpg\";\nimport hangman4 from \"./images/hangman4.jpg\";\nimport hangman5 from \"./images/hangman5.jpg\";\nimport hangman6 from \"./images/hangman6.jpg\";\nimport hangman7 from \"./images/hangman7.jpg\";\n\nconst GameLayout = (props) => {\n  const { word, hiddenWord, start, setStart, time, setTime, lives, setStatus } = props\n  const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",\n    \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n    \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  \n  const [guessed, setGuessed] = useState([])\n  let guesses = guessed.join(\" \")\n  const imagesHangman = [hangman1, hangman2, hangman3, hangman4, hangman5, hangman6, hangman7];\n\n  return (\n    <div className=\"container-1 center\">\n      <div>\n        { props.hiddenWord === \"\" ? <h1>Loading...</h1>\n          : \n          <>\n            <h1>Singleplayer</h1>\n            <Stopwatch start={props.start} time={props.time} setTime={props.setTime}/>\n            <img src={imagesHangman[6 - props.lives]} width=\"325\" height=\"280\" alt=\"hangman\"/>\n            <h2 className=\"hidden-word\">{props.hiddenWord}</h2>\n            <div className=\"flex-container\">\n              {alphabets.map((a, i) => <button className=\"letter-btn\" key={i} disabled={guessed.includes(a)} onClick={() => {\n                if (!props.start) {\n                  props.setStart(true)\n                  props.setStatus(\"Ongoing\")\n                }\n                if (props.word.includes(a) && !guesses.includes(a)) {\n                  setCorrect([...correct, a])\n                  setGuessed([...guessed, a])\n                  checkWin()\n                } else if (!guesses.includes(a)) {\n                  setLives(lives - 1)\n                  setGuessed([...guessed, a])\n                  checkWin()\n                }\n              }}>{a}</button>)}\n            </div>\n            <h3>Letters used:</h3>\n            <h3>{guesses}</h3>\n            <h3>Lives left: {lives < 0 ? 0 : lives}</h3>\n          </>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default GameLayout"],"mappings":"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"},"metadata":{},"sourceType":"module"}