[{"/Users/izzah/Documents/Programming/hangman_project/client/src/index.js":"1","/Users/izzah/Documents/Programming/hangman_project/client/src/App.js":"2","/Users/izzah/Documents/Programming/hangman_project/client/src/reportWebVitals.js":"3","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Singleplayer.js":"4","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Home.js":"5","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Multiplayer.js":"6","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Leaderboard.js":"7","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Modal.js":"8","/Users/izzah/Documents/Programming/hangman_project/client/src/components/SubmitScore.js":"9","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Stopwatch.js":"10","/Users/izzah/Documents/Programming/hangman_project/client/src/components/SetWordModal.js":"11"},{"size":535,"mtime":1652896579132,"results":"12","hashOfConfig":"13"},{"size":672,"mtime":1652899983749,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1652896579133,"results":"15","hashOfConfig":"13"},{"size":4354,"mtime":1653150020619,"results":"16","hashOfConfig":"13"},{"size":1163,"mtime":1653144644530,"results":"17","hashOfConfig":"13"},{"size":3267,"mtime":1653150187625,"results":"18","hashOfConfig":"13"},{"size":126,"mtime":1652899976679,"results":"19","hashOfConfig":"13"},{"size":1327,"mtime":1653149621031,"results":"20","hashOfConfig":"13"},{"size":1393,"mtime":1653149638918,"results":"21","hashOfConfig":"13"},{"size":644,"mtime":1653126819586,"results":"22","hashOfConfig":"13"},{"size":1401,"mtime":1653151374362,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"3rhgr2",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/izzah/Documents/Programming/hangman_project/client/src/index.js",[],[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/App.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/reportWebVitals.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Singleplayer.js",["63"],[],"import React, { useState, useEffect } from \"react\";\nimport Modal from \"./Modal\";\nimport Stopwatch from \"./Stopwatch\";\n\nconst Singleplayer = () => {\n  const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",\n    \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n    \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [start, setStart] = useState(false)\n  const [time, setTime] = useState(0)\n  const [word, setWord] = useState(\"\")\n  const [correct, setCorrect] = useState([])\n  const [guessed, setGuessed] = useState([])\n  const [lives, setLives] = useState(6) // 6 lives\n  const [status, setStatus] = useState(\"Ongoing\")\n  const hiddenWord = word.toUpperCase().split(\"\").map(letter => correct.includes(letter) ? letter : \"_\").join(\" \")\n  let guesses = guessed.join(\" \")\n  const MAX_SCORE = 24000\n  const MAX_BONUS = 60000\n  const bonus = (time > 60000 || status === \"L\") ? 0 : MAX_BONUS - time\n  const endMessage = status === \"W\" ? \"You won!\" : \"You lost!\"\n\n  const showModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const hideModal = () => {\n    setIsOpenModal(false)\n  }\n\n  const checkWin = () => {\n    if (!hiddenWord.includes(\"_\") && lives > 0) {\n      setStatus(\"W\")\n      endGame()\n    } else if (hiddenWord.includes(\"_\") && lives === 0) {\n      setStatus(\"L\")\n      endGame()\n    }\n  }\n\n  const countPoints = () => {\n    if (status === \"W\" && lives > 0) {\n      return (lives / 6) * MAX_SCORE + bonus\n    } else {\n      return 0\n    }\n  }\n\n  const endGame = () => {\n    setStart(false)\n    showModal()\n  }\n\n  const randomIntFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  const getWord = () => {\n    fetch(`https://www.wordgamedb.com/api/v1/words/?numLetters=${randomIntFromInterval(3, 7)}`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Could not fetch word data.\")\n        }\n        return res.json()\n      })\n      .then(data => {\n        setWord(data[Math.floor(Math.random() * data.length)].word.toUpperCase())\n      })\n      .then(() => console.log(\"Ok\"))\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    getWord()\n  }, [])\n\n  useEffect(() => {\n    if ((lives >= 0 && lives < 6) && status === \"Ongoing\") {\n      checkWin()\n    }\n  })\n\n  return (\n    <>\n      <div className=\"container-1 center\">\n        <h1>Singleplayer</h1>\n        <Stopwatch start={start} time={time} setTime={setTime}/>\n        <h2 className=\"hidden-word\">{hiddenWord}</h2>\n        <div className=\"flex-container\">\n          {alphabets.map((a, i) => <button className=\"letter-btn\" key={i} disabled={guessed.includes(a)} onClick={() => {\n            if (!start) {\n              setStart(true)\n            }\n            if (word.includes(a) && !guesses.includes(a)) {\n              setCorrect([...correct, a])\n              setGuessed([...guessed, a])\n              checkWin()\n            } else if (!guesses.includes(a)) {\n              setLives(lives - 1)\n              setGuessed([...guessed, a])\n              checkWin()\n            }\n          }}>{a}</button>)}\n        </div>\n        <h3>Letters used:</h3>\n        <h3>{guesses}</h3>\n        <h3>Lives left: {lives < 0 ? 0 : lives}</h3>\n      </div>\n      <div className=\"container-1\">\n        <Modal show={isOpenModal} onClose={hideModal} title={endMessage} score={countPoints()}>\n          <p>Bonus points: {bonus}</p>\n          <p>Total Score: {countPoints()}</p>\n          <p>The word is: {word}</p>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Singleplayer\n\n// General game logic to implement\n// 6 lives --> player gets more points if they with fewer incorrect guesses/more lives left\n// run a stopwatch --> the faster the time taken to win, the more points they get\n// max score from lives alone = 24000\n// add bonus points based on time taken --> max bonus points = 60000\n// if take more than 1 min, no bonus points\n// time-based bonus points --> decrease by 1 for every millisecond taken to complete game\n// display no. of lives left\n// display letters used\n// only allow letters as guesses\n// update gallows & lives every time an incorrect guess is made\n// ensure user cannot continue playing when lives === 0 or if user wins\n// submit username & score to database upon completion of game\n// reveal word at end of game regardless of outcome",[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Home.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Multiplayer.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Leaderboard.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Modal.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/SubmitScore.js",["64"],[],"import React, { useState, useRef } from \"react\";\nimport { CSSTransition } from \"react-transition-group\"\n\nconst SubmitScore = (props) => {\n  const nodeRef = useRef(null)\n  const [username, setUsername] = useState(\"\")\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // http POST request here\n  }\n\n  return (\n    <>\n      <CSSTransition\n        nodeRef={nodeRef}\n        in={props.show}\n        unmountOnExit\n        timeout={{ enter: 0, exit: 300 }}\n      >\n        <div ref={nodeRef} className={`modal ${props.show ? 'show' : ''}`}>\n          <form onSubmit={handleSubmit}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">{props.title}</h4>\n              </div>\n              <div className=\"modal-body\">\n                <label htmlFor=\"username\">Please enter a username:</label>\n                <br/>\n                <input className=\"form-control\" type=\"text\" name=\"username\" onChange={e => setUsername(e.target.value)} required/>\n              </div>\n              <div className=\"modal-footer\">\n                <button className=\"btn\" type=\"submit\">Submit Score</button>\n                <button className=\"btn-close\" onClick={props.onClose}>Close</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </CSSTransition>\n    </>\n  )\n}\n\nexport default SubmitScore","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Stopwatch.js",["65"],[],"import React, { useEffect } from \"react\";\n\nconst Stopwatch = (props) => {\n  const { time, setTime, start } = props\n  useEffect(() => {\n    let interval = null\n    \n    if (start) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10)\n      }, 10)\n    } else {\n      clearInterval(interval)\n    }\n\n    return () => clearInterval(interval)\n  }, [start])\n\n  return (\n    <div>\n      <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n      <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n      <span>{(\"0\" + (time / 10) % 1000).slice(-2)}</span>\n    </div>\n  )\n}\n\nexport default Stopwatch",[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/SetWordModal.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":77,"column":6,"nodeType":"68","endLine":77,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":10,"nodeType":"72","messageId":"73","endLine":6,"endColumn":18},{"ruleId":"66","severity":1,"message":"74","line":17,"column":6,"nodeType":"68","endLine":17,"endColumn":13,"suggestions":"75"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWord'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setTime'. Either include it or remove the dependency array.",["77"],{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [getWord]",{"range":"82","text":"83"},"Update the dependencies array to be: [setTime, start]",{"range":"84","text":"85"},[2185,2187],"[getWord]",[370,377],"[setTime, start]"]