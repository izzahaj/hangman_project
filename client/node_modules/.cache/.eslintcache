[{"/Users/izzah/Documents/Programming/hangman_project/client/src/index.js":"1","/Users/izzah/Documents/Programming/hangman_project/client/src/App.js":"2","/Users/izzah/Documents/Programming/hangman_project/client/src/reportWebVitals.js":"3","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Singleplayer.js":"4","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Home.js":"5","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Multiplayer.js":"6","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Leaderboard.js":"7","/Users/izzah/Documents/Programming/hangman_project/client/src/components/SubmitScore.js":"8","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Stopwatch.js":"9","/Users/izzah/Documents/Programming/hangman_project/client/src/components/SetWordModal.js":"10","/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/Modal.js":"11","/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalHeader.js":"12","/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalTitle.js":"13","/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalFooter.js":"14","/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalBody.js":"15"},{"size":535,"mtime":1653215547342,"results":"16","hashOfConfig":"17"},{"size":672,"mtime":1653215547338,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1653215547342,"results":"19","hashOfConfig":"17"},{"size":5984,"mtime":1653414566497,"results":"20","hashOfConfig":"17"},{"size":1356,"mtime":1653409784406,"results":"21","hashOfConfig":"17"},{"size":4180,"mtime":1653411479668,"results":"22","hashOfConfig":"17"},{"size":1567,"mtime":1653412393902,"results":"23","hashOfConfig":"17"},{"size":1784,"mtime":1653411586943,"results":"24","hashOfConfig":"17"},{"size":644,"mtime":1653215547339,"results":"25","hashOfConfig":"17"},{"size":1150,"mtime":1653410765197,"results":"26","hashOfConfig":"17"},{"size":498,"mtime":1653410712488,"results":"27","hashOfConfig":"17"},{"size":164,"mtime":1653410733328,"results":"28","hashOfConfig":"17"},{"size":159,"mtime":1653410739375,"results":"29","hashOfConfig":"17"},{"size":164,"mtime":1653410727337,"results":"30","hashOfConfig":"17"},{"size":158,"mtime":1653410717619,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3rhgr2",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/izzah/Documents/Programming/hangman_project/client/src/index.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/App.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/reportWebVitals.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Singleplayer.js",["79"],[],"import React, { useState, useEffect } from \"react\";\nimport Stopwatch from \"./Stopwatch\";\nimport SubmitScore from \"./SubmitScore\";\nimport Modal from \"./modal/Modal\";\nimport ModalHeader from \"./modal/ModalHeader\";\nimport ModalTitle from \"./modal/ModalTitle\";\nimport ModalBody from \"./modal/ModalBody\";\nimport ModalFooter from \"./modal/ModalFooter\";\nimport { Link } from \"react-router-dom\";\nimport hangman1 from \"./images/hangman1.jpg\";\nimport hangman2 from \"./images/hangman2.jpg\";\nimport hangman3 from \"./images/hangman3.jpg\";\nimport hangman4 from \"./images/hangman4.jpg\";\nimport hangman5 from \"./images/hangman5.jpg\";\nimport hangman6 from \"./images/hangman6.jpg\";\nimport hangman7 from \"./images/hangman7.jpg\";\n\nconst Singleplayer = () => {\n  const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",\n    \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n    \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [showSubmit, setShowSubmit] = useState(false)\n  const [start, setStart] = useState(false)\n  const [time, setTime] = useState(0)\n  const [word, setWord] = useState(\"\")\n  const [correct, setCorrect] = useState([])\n  const [guessed, setGuessed] = useState([])\n  const [lives, setLives] = useState(6) // 6 lives\n  const [status, setStatus] = useState(\"\")\n  const hiddenWord = word.toUpperCase().split(\"\").map(letter => correct.includes(letter) ? letter : \"_\").join(\" \")\n  let guesses = guessed.join(\" \")\n  const MAX_SCORE = 24000\n  const MAX_BONUS = 60000\n  const bonus = (time > 60000 || status === \"L\") ? 0 : MAX_BONUS - time\n  const endMessage = status === \"W\" ? \"You won!\" : \"You lost!\"\n  \n  const imagesHangman = [hangman1, hangman2, hangman3, hangman4, hangman5, hangman6, hangman7];\n\n  const showModal = () => {\n    setIsOpenModal(true)\n  }\n\n  const hideModal = () => {\n    setIsOpenModal(false)\n  }\n\n  const checkWin = () => {\n    if (!hiddenWord.includes(\"_\") && lives > 0) {\n      setStatus(\"W\")\n      endGame()\n    } else if (hiddenWord.includes(\"_\") && lives === 0) {\n      setStatus(\"L\")\n      endGame()\n    }\n  }\n\n  const countPoints = () => {\n    if (status === \"W\" && lives > 0) {\n      return (lives / 6) * MAX_SCORE + bonus\n    } else {\n      return 0\n    }\n  }\n\n  const endGame = () => {\n    setStart(false)\n    showModal()\n  }\n\n  const randomIntFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  const getWord = () => {\n    fetch(`https://www.wordgamedb.com/api/v1/words/?numLetters=${randomIntFromInterval(3, 7)}`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Could not fetch word data.\")\n        }\n        return res.json()\n      })\n      .then(data => {\n        setWord(data[Math.floor(Math.random() * data.length)].word.toUpperCase())\n      })\n      .then(() => console.log(\"Ok\"))\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    getWord()\n  }, [])\n\n  useEffect(() => {\n    if ((lives >= 0) && status === \"Ongoing\") {\n      checkWin()\n    }\n  })\n\n  return (\n    <>\n      <div className=\"container-1 center\">\n        <div>\n          { hiddenWord === \"\" ? <h1>Loading...</h1>\n            : \n            <>\n              <h1>Singleplayer</h1>\n              <Stopwatch start={start} time={time} setTime={setTime}/>\n              <img src={imagesHangman[6-lives]} width=\"325\" height=\"280\" alt=\"hangman\"/>\n              <h2 className=\"hidden-word\">{hiddenWord}</h2>\n              <div className=\"flex-container\">\n                {alphabets.map((a, i) => <button className=\"letter-btn\" key={i} disabled={guessed.includes(a)} onClick={() => {\n                  if (!start) {\n                    setStart(true)\n                    setStatus(\"Ongoing\")\n                  }\n                  if (word.includes(a) && !guesses.includes(a)) {\n                    setCorrect([...correct, a])\n                    setGuessed([...guessed, a])\n                    checkWin()\n                  } else if (!guesses.includes(a)) {\n                    setLives(lives - 1)\n                    setGuessed([...guessed, a])\n                    checkWin()\n                  }\n                }}>{a}</button>)}\n              </div>\n              <h3>Letters used:</h3>\n              <h3>{guesses}</h3>\n              <h3>Lives left: {lives < 0 ? 0 : lives}</h3>\n            </>\n          }\n        </div>\n      </div>\n      <div className=\"container-1\">\n        <Modal show={isOpenModal} onClose={hideModal}>\n          <ModalHeader>\n            <ModalTitle>{endMessage}</ModalTitle>\n          </ModalHeader>\n          <ModalBody>\n            <p>Bonus points: {bonus}</p>\n            <p>Total Score: {countPoints()}</p>\n            <p>The word is: {word}</p>\n          </ModalBody>\n          <ModalFooter>\n            <button className=\"button\" onClick={() => setShowSubmit(true)}>Submit Score</button>\n            <Link to=\"/\"><button className=\"button\">Play Again</button></Link>\n              <SubmitScore\n                show={showSubmit}\n                onClose={() => setShowSubmit(false)}\n                score={countPoints()}\n              />\n          </ModalFooter>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Singleplayer\n\n// General game logic to implement\n// 6 lives --> player gets more points if they with fewer incorrect guesses/more lives left\n// run a stopwatch --> the faster the time taken to win, the more points they get\n// max score from lives alone = 24000\n// add bonus points based on time taken --> max bonus points = 60000\n// if take more than 1 min, no bonus points\n// time-based bonus points --> decrease by 1 for every millisecond taken to complete game\n// display no. of lives left\n// display letters used\n// only allow letters as guesses\n// update gallows & lives every time an incorrect guess is made\n// ensure user cannot continue playing when lives === 0 or if user wins\n// submit username & score to database upon completion of game\n// reveal word at end of game regardless of outcome\n","/Users/izzah/Documents/Programming/hangman_project/client/src/components/Home.js",[],[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Multiplayer.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Leaderboard.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/SubmitScore.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/Stopwatch.js",["80"],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/SetWordModal.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/Modal.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalHeader.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalTitle.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalFooter.js",[],[],"/Users/izzah/Documents/Programming/hangman_project/client/src/components/modal/ModalBody.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":93,"column":6,"nodeType":"83","endLine":93,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":17,"column":6,"nodeType":"83","endLine":17,"endColumn":13,"suggestions":"86"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWord'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'setTime'. Either include it or remove the dependency array.",["88"],{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [getWord]",{"range":"93","text":"94"},"Update the dependencies array to be: [setTime, start]",{"range":"95","text":"96"},[2923,2925],"[getWord]",[370,377],"[setTime, start]"]